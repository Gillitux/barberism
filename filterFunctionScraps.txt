****In SearchOptions.js****
import ServiceFilterForm from '../../components/ServiceFilterForm/ServiceFilterForm';
<ServiceFilterForm handleSelectService={handleSelectService} />

****ServiceFilterForm Component****
import { Component } from 'react';

export default class ServiceFilterForm extends Component {
  render() {
    const { handleSelectService } = this.props;
    return (
      <form className="service__select" onChange={handleSelectService}>
        <div className="select__services search__items">
          <label htmlFor="select__services">Filter by Service</label>
          <select
            name="services"
            id="select__services"
            className="service__dropdown"
            form="search__bar"
          >
            <option value="">Select service</option>
            <option value="Sensory Hours">Sensory hours</option>
            <option value="Scissor Cuts">Scissor cuts</option>
            <option value="Longer Appointment Times">
              Longer appointments
            </option>
            <option value="Home Haircuts">Home haircuts</option>
          </select>
        </div>
      </form>
    );
  }
}


*****in BarberListPage*****
this.setState({
          barberListBeforeSelectService: this.context.barberList,
        });
        console.log(
          'original barberList is',
          this.state.barberListBeforeSelectService
        );


state = {
    serviceSelected: false,
    barberListBeforeSelectService: [],
}

handleSelectService = evt => {
    const { setBarberList } = this.context;
    const { barberList = [] } = this.context;
    const { barberListBeforeSelectService } = this.state;
    let newBarberList = [];
    evt.preventDefault();
    console.log('ETV', evt.target.value);

    if (this.state.serviceSelected === true) {
      this.props.history.goBack();

      // newBarberList = [];
      const result = barberListBeforeSelectService.find(({ services }) =>
        services.includes(evt.target.value)
      );
      newBarberList.push(result);
    } else {
      const result = barberList.find(({ services }) =>
        services.includes(evt.target.value)
      );
      this.setState({ serviceSelected: true });
      newBarberList.push(result);
    }

    if (evt.target.value === '') {
      // setBarberList(barberListBeforeSelectService);
    } else {
      setBarberList(newBarberList);
    }
  };